{"metadata":{"name":"sql_practice","user_save_timestamp":"1969-12-31T19:00:00.000Z","auto_save_timestamp":"1969-12-31T19:00:00.000Z","language_info":{"name":"scala","file_extension":"scala","codemirror_mode":"text/x-scala"},"trusted":true,"customLocalRepo":null,"customRepos":null,"customDeps":null,"customImports":null,"customArgs":null,"customSparkConf":null},"cells":[{"metadata":{"trusted":true,"input_collapsed":false,"collapsed":false,"id":"976926714274496B9895DDBA677F7E6E"},"cell_type":"code","source":"import org.apache.spark.sql.{DataFrame, Dataset, Row, SparkSession}\nimport org.apache.spark.sql.functions._","outputs":[{"name":"stdout","output_type":"stream","text":"import org.apache.spark.sql.{DataFrame, Dataset, Row, SparkSession}\nimport org.apache.spark.sql.functions._\n"},{"metadata":{},"data":{"text/html":""},"output_type":"execute_result","execution_count":28,"time":"Took: 1 second 508 milliseconds, at 2018-1-19 1:30"}]},{"metadata":{"trusted":true,"input_collapsed":false,"collapsed":false,"id":"12D7EB8782DB4917AB545A0237264392"},"cell_type":"code","source":"case class MatchData(\n                      id_1: Int,\n                      id_2: Int,\n                      cmp_fname_c1: Option[Double],\n                      cmp_fname_c2: Option[Double],\n                      cmp_lname_c1: Option[Double],\n                      cmp_lname_c2: Option[Double],\n                      cmp_sex: Option[Int],\n                      cmp_bd: Option[Int],\n                      cmp_bm: Option[Int],\n                      cmp_by: Option[Int],\n                      cmp_plz: Option[Int],\n                      is_match: Boolean\n                    )\n","outputs":[{"name":"stdout","output_type":"stream","text":"defined class MatchData\n"},{"metadata":{},"data":{"text/html":""},"output_type":"execute_result","execution_count":2,"time":"Took: 572 milliseconds, at 2018-1-19 1:16"}]},{"metadata":{"trusted":true,"input_collapsed":false,"collapsed":false,"id":"9F2ECF39FB4848B48035DA885A5C8DBA"},"cell_type":"code","source":"val spark = SparkSession.builder\n      .appName(\"sql1\")\n      .getOrCreate\n\nimport spark.implicits._\nval preview = spark.read.csv(\"data/block_5.csv\")\npreview.show()\npreview.printSchema()","outputs":[{"name":"stdout","output_type":"stream","text":"+-----+-----+------------+------------+------------+------------+-------+------+------+------+-------+--------+\n|  _c0|  _c1|         _c2|         _c3|         _c4|         _c5|    _c6|   _c7|   _c8|   _c9|   _c10|    _c11|\n+-----+-----+------------+------------+------------+------------+-------+------+------+------+-------+--------+\n| id_1| id_2|cmp_fname_c1|cmp_fname_c2|cmp_lname_c1|cmp_lname_c2|cmp_sex|cmp_bd|cmp_bm|cmp_by|cmp_plz|is_match|\n|31641|62703|           1|           ?|           1|           ?|      1|     1|     1|     1|      1|    TRUE|\n|27816|46246|           1|           ?|           1|           ?|      1|     1|     1|     1|      1|    TRUE|\n|  980| 2651|           1|           ?|           1|           ?|      1|     1|     1|     1|      1|    TRUE|\n| 6514| 8780|           1|           ?|           1|           ?|      1|     1|     1|     1|      1|    TRUE|\n| 5532|14374|           1|           ?|           1|           ?|      1|     1|     1|     1|      1|    TRUE|\n|25763|61342|           1|           ?|           1|           ?|      1|     1|     1|     1|      1|    TRUE|\n|59655|59657|           1|           ?|           1|           ?|      1|     1|     1|     1|      1|    TRUE|\n|23800|32179|           1|           ?|           1|           ?|      1|     1|     1|     1|      1|    TRUE|\n|33568|38196|           1|           ?|           1|           ?|      1|     1|     1|     1|      1|    TRUE|\n|95679|95680|           1|           ?|           1|           ?|      1|     1|     1|     1|      1|    TRUE|\n|23729|60864|           1|           1|           1|           1|      1|     1|     1|     1|      1|    TRUE|\n|21573|36660|           1|           ?|           1|           ?|      1|     1|     1|     1|      1|    TRUE|\n|26251|40278|           1|           ?|           1|           ?|      1|     1|     1|     1|      1|    TRUE|\n|77101|77106|           1|           ?|           1|           1|      1|     1|     1|     1|      1|    TRUE|\n|44816|87744|           1|           ?|           1|           ?|      1|     1|     1|     1|      1|    TRUE|\n|17156|49320|           1|           ?|           1|           ?|      1|     1|     1|     1|      1|    TRUE|\n|20166|37894|           1|           ?|           1|           ?|      1|     1|     1|     1|      1|    TRUE|\n|28894|34446|           1|           ?|           1|           ?|      1|     1|     1|     1|      1|    TRUE|\n|95236|95834|           1|           ?|           1|           ?|      1|     1|     1|     1|      1|    TRUE|\n+-----+-----+------------+------------+------------+------------+-------+------+------+------+-------+--------+\nonly showing top 20 rows\n\nroot\n |-- _c0: string (nullable = true)\n |-- _c1: string (nullable = true)\n |-- _c2: string (nullable = true)\n |-- _c3: string (nullable = true)\n |-- _c4: string (nullable = true)\n |-- _c5: string (nullable = true)\n |-- _c6: string (nullable = true)\n |-- _c7: string (nullable = true)\n |-- _c8: string (nullable = true)\n |-- _c9: string (nullable = true)\n |-- _c10: string (nullable = true)\n |-- _c11: string (nullable = true)\n\nspark: org.apache.spark.sql.SparkSession = org.apache.spark.sql.SparkSession@4a30307e\nimport spark.implicits._\npreview: org.apache.spark.sql.DataFrame = [_c0: string, _c1: string ... 10 more fields]\n"},{"metadata":{},"data":{"text/html":""},"output_type":"execute_result","execution_count":30,"time":"Took: 2 seconds 60 milliseconds, at 2018-1-19 1:30"}]},{"metadata":{"trusted":true,"input_collapsed":false,"collapsed":false,"id":"4C0E957DE9514471B096FF7AC453E94A"},"cell_type":"code","source":"val parsed = spark.read\n                      .option(\"header\", \"true\")\n                      .option(\"nullValue\", \"?\")\n                      .option(\"inferSchema\", \"true\")\n                      .csv(\"data/block_5.csv\")","outputs":[{"name":"stdout","output_type":"stream","text":"parsed: org.apache.spark.sql.DataFrame = [id_1: int, id_2: int ... 10 more fields]\n"},{"metadata":{},"data":{"text/html":""},"output_type":"execute_result","execution_count":9,"time":"Took: 1 second 791 milliseconds, at 2018-1-19 1:20"}]},{"metadata":{"trusted":true,"input_collapsed":false,"collapsed":false,"id":"6C9502CF4DA54054B968AFA6AEA58123"},"cell_type":"code","source":"parsed.show()\nparsed.printSchema()","outputs":[{"name":"stdout","output_type":"stream","text":"+-----+-----+------------+------------+------------+------------+-------+------+------+------+-------+--------+\n| id_1| id_2|cmp_fname_c1|cmp_fname_c2|cmp_lname_c1|cmp_lname_c2|cmp_sex|cmp_bd|cmp_bm|cmp_by|cmp_plz|is_match|\n+-----+-----+------------+------------+------------+------------+-------+------+------+------+-------+--------+\n|31641|62703|         1.0|        null|         1.0|        null|      1|     1|     1|     1|      1|    true|\n|27816|46246|         1.0|        null|         1.0|        null|      1|     1|     1|     1|      1|    true|\n|  980| 2651|         1.0|        null|         1.0|        null|      1|     1|     1|     1|      1|    true|\n| 6514| 8780|         1.0|        null|         1.0|        null|      1|     1|     1|     1|      1|    true|\n| 5532|14374|         1.0|        null|         1.0|        null|      1|     1|     1|     1|      1|    true|\n|25763|61342|         1.0|        null|         1.0|        null|      1|     1|     1|     1|      1|    true|\n|59655|59657|         1.0|        null|         1.0|        null|      1|     1|     1|     1|      1|    true|\n|23800|32179|         1.0|        null|         1.0|        null|      1|     1|     1|     1|      1|    true|\n|33568|38196|         1.0|        null|         1.0|        null|      1|     1|     1|     1|      1|    true|\n|95679|95680|         1.0|        null|         1.0|        null|      1|     1|     1|     1|      1|    true|\n|23729|60864|         1.0|         1.0|         1.0|         1.0|      1|     1|     1|     1|      1|    true|\n|21573|36660|         1.0|        null|         1.0|        null|      1|     1|     1|     1|      1|    true|\n|26251|40278|         1.0|        null|         1.0|        null|      1|     1|     1|     1|      1|    true|\n|77101|77106|         1.0|        null|         1.0|         1.0|      1|     1|     1|     1|      1|    true|\n|44816|87744|         1.0|        null|         1.0|        null|      1|     1|     1|     1|      1|    true|\n|17156|49320|         1.0|        null|         1.0|        null|      1|     1|     1|     1|      1|    true|\n|20166|37894|         1.0|        null|         1.0|        null|      1|     1|     1|     1|      1|    true|\n|28894|34446|         1.0|        null|         1.0|        null|      1|     1|     1|     1|      1|    true|\n|95236|95834|         1.0|        null|         1.0|        null|      1|     1|     1|     1|      1|    true|\n|37609|68906|         1.0|        null|         1.0|        null|      1|     1|     1|     1|      1|    true|\n+-----+-----+------------+------------+------------+------------+-------+------+------+------+-------+--------+\nonly showing top 20 rows\n\nroot\n |-- id_1: integer (nullable = true)\n |-- id_2: integer (nullable = true)\n |-- cmp_fname_c1: double (nullable = true)\n |-- cmp_fname_c2: double (nullable = true)\n |-- cmp_lname_c1: double (nullable = true)\n |-- cmp_lname_c2: double (nullable = true)\n |-- cmp_sex: integer (nullable = true)\n |-- cmp_bd: integer (nullable = true)\n |-- cmp_bm: integer (nullable = true)\n |-- cmp_by: integer (nullable = true)\n |-- cmp_plz: integer (nullable = true)\n |-- is_match: boolean (nullable = true)\n\n"},{"metadata":{},"data":{"text/html":""},"output_type":"execute_result","execution_count":11,"time":"Took: 2 seconds 342 milliseconds, at 2018-1-19 1:20"}]},{"metadata":{"trusted":true,"input_collapsed":false,"collapsed":false,"id":"B83A4894D55D4632B9434AA187EB6572"},"cell_type":"code","source":"parsed.count()\nparsed.persist()","outputs":[{"name":"stdout","output_type":"stream","text":"res57: parsed.type = [id_1: int, id_2: int ... 10 more fields]\n"},{"metadata":{},"data":{"text/html":"<div class=\"df-canvas\">\n      <script data-this=\"{&quot;dataId&quot;:&quot;anona874b6524dde5681b0a1a127fdcc7172&quot;,&quot;partitionIndexId&quot;:&quot;anon88ee7ce29731e0a4167f62fb714bceab&quot;,&quot;numPartitions&quot;:22997,&quot;dfSchema&quot;:{&quot;type&quot;:&quot;struct&quot;,&quot;fields&quot;:[{&quot;name&quot;:&quot;id_1&quot;,&quot;type&quot;:&quot;integer&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot;id_2&quot;,&quot;type&quot;:&quot;integer&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot;cmp_fname_c1&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot;cmp_fname_c2&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot;cmp_lname_c1&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot;cmp_lname_c2&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot;cmp_sex&quot;,&quot;type&quot;:&quot;integer&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot;cmp_bd&quot;,&quot;type&quot;:&quot;integer&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot;cmp_bm&quot;,&quot;type&quot;:&quot;integer&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot;cmp_by&quot;,&quot;type&quot;:&quot;integer&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot;cmp_plz&quot;,&quot;type&quot;:&quot;integer&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot;is_match&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}}]}}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/req(['../javascripts/notebook/dataframe','../javascripts/notebook/consoleDir'], \n      function(dataframe, extension) {\n        dataframe.call(data, this, extension);\n      }\n    );/*]]>*/</script>\n      <link rel=\"stylesheet\" href=\"/assets/stylesheets/ipython/css/dataframe.css\" type=\"text/css\"/>\n    </div>"},"data_list":{"application/svg+pngbase64":[]},"output_type":"execute_result","execution_count":14,"time":"Took: 1 second 942 milliseconds, at 2018-1-19 1:22"}]},{"metadata":{"trusted":true,"input_collapsed":false,"collapsed":false,"id":"515D99B85F52471D8C5561FAC5849003"},"cell_type":"code","source":"parsed.groupBy(\"is_match\")\n          .count()\n          .orderBy($\"count\".desc)\n          .show()","outputs":[{"name":"stdout","output_type":"stream","text":"+--------+------+\n|is_match| count|\n+--------+------+\n|   false|572820|\n|    true|  2094|\n+--------+------+\n\n"},{"metadata":{},"data":{"text/html":""},"output_type":"execute_result","execution_count":15,"time":"Took: 3 seconds 620 milliseconds, at 2018-1-19 1:23"}]},{"metadata":{"trusted":true,"input_collapsed":false,"collapsed":false,"id":"046866D113EA494FA5AF76E9063172C3"},"cell_type":"code","source":" parsed.toDF().registerTempTable(\"linkage\") // table name: linkage","outputs":[{"metadata":{},"data":{"text/html":""},"output_type":"execute_result","execution_count":15,"time":"Took: 445 milliseconds, at 2018-1-18 11:13"}]},{"metadata":{"trusted":true,"input_collapsed":false,"collapsed":false,"id":"E159AD993D7E423CB8E6092CC5D14BC3"},"cell_type":"code","source":"parsed.createOrReplaceTempView(\"linkage\")","outputs":[{"metadata":{},"data":{"text/html":""},"output_type":"execute_result","execution_count":16,"time":"Took: 1 second 179 milliseconds, at 2018-1-19 1:23"}]},{"metadata":{"trusted":true,"input_collapsed":false,"collapsed":false,"id":"38751C28F3804E8D84AFB8F67FF5314A"},"cell_type":"code","source":"sqlContext.sql(\"\"\"\n      SELECT is_match, COUNT(*) count_\n      FROM linkage\n      GROUP BY is_match\n      ORDER BY count_ DESC\n    \"\"\").show()","outputs":[{"name":"stdout","output_type":"stream","text":"+--------+------+\n|is_match|count_|\n+--------+------+\n|   false|572820|\n|    true|  2094|\n+--------+------+\n\n"},{"metadata":{},"data":{"text/html":""},"output_type":"execute_result","execution_count":17,"time":"Took: 1 second 595 milliseconds, at 2018-1-19 1:23"}]},{"metadata":{"trusted":true,"input_collapsed":false,"collapsed":false,"id":"15D81335BD054F3980269FFCE6A2D72C"},"cell_type":"code","source":"val summary=parsed.describe() // same as in R, summar description: standard 5 factors;\nsummary.show()","outputs":[{"name":"stdout","output_type":"stream","text":"+-------+------------------+-----------------+------------------+------------------+-------------------+-------------------+-------------------+------------------+-------------------+------------------+--------------------+\n|summary|              id_1|             id_2|      cmp_fname_c1|      cmp_fname_c2|       cmp_lname_c1|       cmp_lname_c2|            cmp_sex|            cmp_bd|             cmp_bm|            cmp_by|             cmp_plz|\n+-------+------------------+-----------------+------------------+------------------+-------------------+-------------------+-------------------+------------------+-------------------+------------------+--------------------+\n|  count|            574914|           574914|            574802|             10414|             574914|                257|             574914|            574824|             574824|            574824|              573639|\n|   mean|33339.355670587254|66606.91516122411|0.7135298994861159|0.9033751497526223|  0.315423189875679| 0.3282131508785206|  0.954506239194036|0.2246478922244026|0.48887137628213156|0.2223550164920045|0.005567961732030074|\n| stddev|23643.556028111416|23597.93209267407|0.3885410750690404| 0.266907055420433|0.33374256832926946|0.37527229651401645|0.20838463010802555|0.4173505957353688| 0.4998765732010075|0.4158287675764643|  0.0744108136398136|\n|    min|                 2|               44|               0.0|               0.0|                0.0|                0.0|                  0|                 0|                  0|                 0|                   0|\n|    max|             99902|           100000|               1.0|               1.0|                1.0|                1.0|                  1|                 1|                  1|                 1|                   1|\n+-------+------------------+-----------------+------------------+------------------+-------------------+-------------------+-------------------+------------------+-------------------+------------------+--------------------+\n\nsummary: org.apache.spark.sql.DataFrame = [summary: string, id_1: string ... 10 more fields]\n"},{"metadata":{},"data":{"text/html":""},"output_type":"execute_result","execution_count":19,"time":"Took: 2 seconds 435 milliseconds, at 2018-1-19 1:24"}]},{"metadata":{"trusted":true,"input_collapsed":false,"collapsed":false,"id":"12D2A08B1516434E8280628EEE784FBF"},"cell_type":"code","source":"summary.select(\"summary\", \"id_1\", \"cmp_lname_c1\")\n        .show()","outputs":[{"name":"stdout","output_type":"stream","text":"+-------+------------------+-------------------+\n|summary|              id_1|       cmp_lname_c1|\n+-------+------------------+-------------------+\n|  count|            574914|             574914|\n|   mean|33339.355670587254|  0.315423189875679|\n| stddev|23643.556028111416|0.33374256832926946|\n|    min|                 2|                0.0|\n|    max|             99902|                1.0|\n+-------+------------------+-------------------+\n\n"},{"metadata":{},"data":{"text/html":""},"output_type":"execute_result","execution_count":20,"time":"Took: 965 milliseconds, at 2018-1-19 1:26"}]},{"metadata":{"trusted":true,"input_collapsed":false,"collapsed":false,"id":"EA5F705808254937A6E378CC46161791"},"cell_type":"code","source":"parsed.select(\"is_match\")","outputs":[{"name":"stdout","output_type":"stream","text":"res71: org.apache.spark.sql.DataFrame = [is_match: boolean]\n"},{"metadata":{},"data":{"text/html":"<div class=\"df-canvas\">\n      <script data-this=\"{&quot;dataId&quot;:&quot;anone730b43d48e210d38639411129dbad5a&quot;,&quot;partitionIndexId&quot;:&quot;anon5f49975d555bdfc2a99995228881bd95&quot;,&quot;numPartitions&quot;:22997,&quot;dfSchema&quot;:{&quot;type&quot;:&quot;struct&quot;,&quot;fields&quot;:[{&quot;name&quot;:&quot;is_match&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}}]}}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/req(['../javascripts/notebook/dataframe','../javascripts/notebook/consoleDir'], \n      function(dataframe, extension) {\n        dataframe.call(data, this, extension);\n      }\n    );/*]]>*/</script>\n      <link rel=\"stylesheet\" href=\"/assets/stylesheets/ipython/css/dataframe.css\" type=\"text/css\"/>\n    </div>"},"data_list":{"application/svg+pngbase64":[]},"output_type":"execute_result","execution_count":21,"time":"Took: 1 second 223 milliseconds, at 2018-1-19 1:26"}]},{"metadata":{"trusted":true,"input_collapsed":false,"collapsed":false,"id":"9F0CA2F7FEFA42548D6E5393A0242A31"},"cell_type":"code","source":"val matches=parsed.where(\"is_match=true\")\nval del=parsed.filter($\"is_match\"=== false)\nmatches.describe()","outputs":[{"name":"stdout","output_type":"stream","text":"matches: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [id_1: int, id_2: int ... 10 more fields]\ndel: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [id_1: int, id_2: int ... 10 more fields]\nres77: org.apache.spark.sql.DataFrame = [summary: string, id_1: string ... 10 more fields]\n"},{"metadata":{},"data":{"text/html":"<div class=\"df-canvas\">\n      <script data-this=\"{&quot;dataId&quot;:&quot;anon028524289ff8cc90cee5668f0bc467d2&quot;,&quot;partitionIndexId&quot;:&quot;anon6f6937f5ffb5f0008ea3ca9b91e091db&quot;,&quot;numPartitions&quot;:1,&quot;dfSchema&quot;:{&quot;type&quot;:&quot;struct&quot;,&quot;fields&quot;:[{&quot;name&quot;:&quot;summary&quot;,&quot;type&quot;:&quot;string&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot;id_1&quot;,&quot;type&quot;:&quot;string&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot;id_2&quot;,&quot;type&quot;:&quot;string&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot;cmp_fname_c1&quot;,&quot;type&quot;:&quot;string&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot;cmp_fname_c2&quot;,&quot;type&quot;:&quot;string&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot;cmp_lname_c1&quot;,&quot;type&quot;:&quot;string&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot;cmp_lname_c2&quot;,&quot;type&quot;:&quot;string&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot;cmp_sex&quot;,&quot;type&quot;:&quot;string&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot;cmp_bd&quot;,&quot;type&quot;:&quot;string&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot;cmp_bm&quot;,&quot;type&quot;:&quot;string&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot;cmp_by&quot;,&quot;type&quot;:&quot;string&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot;cmp_plz&quot;,&quot;type&quot;:&quot;string&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}}]}}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/req(['../javascripts/notebook/dataframe','../javascripts/notebook/consoleDir'], \n      function(dataframe, extension) {\n        dataframe.call(data, this, extension);\n      }\n    );/*]]>*/</script>\n      <link rel=\"stylesheet\" href=\"/assets/stylesheets/ipython/css/dataframe.css\" type=\"text/css\"/>\n    </div>"},"data_list":{"application/svg+pngbase64":[]},"output_type":"execute_result","execution_count":24,"time":"Took: 1 second 330 milliseconds, at 2018-1-19 1:26"}]},{"metadata":{"trusted":true,"input_collapsed":false,"collapsed":false,"id":"C31C1B709F0F4526A614B0D641842933"},"cell_type":"code","source":"del.describe()","outputs":[{"name":"stdout","output_type":"stream","text":"res79: org.apache.spark.sql.DataFrame = [summary: string, id_1: string ... 10 more fields]\n"},{"metadata":{},"data":{"text/html":"<div class=\"df-canvas\">\n      <script data-this=\"{&quot;dataId&quot;:&quot;anon47433f575de0ee3cbbfbc5adcf81f714&quot;,&quot;partitionIndexId&quot;:&quot;anon9beebf300dc81fb9fa816f0cb92c7fb0&quot;,&quot;numPartitions&quot;:1,&quot;dfSchema&quot;:{&quot;type&quot;:&quot;struct&quot;,&quot;fields&quot;:[{&quot;name&quot;:&quot;summary&quot;,&quot;type&quot;:&quot;string&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot;id_1&quot;,&quot;type&quot;:&quot;string&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot;id_2&quot;,&quot;type&quot;:&quot;string&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot;cmp_fname_c1&quot;,&quot;type&quot;:&quot;string&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot;cmp_fname_c2&quot;,&quot;type&quot;:&quot;string&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot;cmp_lname_c1&quot;,&quot;type&quot;:&quot;string&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot;cmp_lname_c2&quot;,&quot;type&quot;:&quot;string&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot;cmp_sex&quot;,&quot;type&quot;:&quot;string&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot;cmp_bd&quot;,&quot;type&quot;:&quot;string&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot;cmp_bm&quot;,&quot;type&quot;:&quot;string&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot;cmp_by&quot;,&quot;type&quot;:&quot;string&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot;cmp_plz&quot;,&quot;type&quot;:&quot;string&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}}]}}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/req(['../javascripts/notebook/dataframe','../javascripts/notebook/consoleDir'], \n      function(dataframe, extension) {\n        dataframe.call(data, this, extension);\n      }\n    );/*]]>*/</script>\n      <link rel=\"stylesheet\" href=\"/assets/stylesheets/ipython/css/dataframe.css\" type=\"text/css\"/>\n    </div>"},"data_list":{"application/svg+pngbase64":[]},"output_type":"execute_result","execution_count":25,"time":"Took: 2 seconds 773 milliseconds, at 2018-1-19 1:26"}]},{"metadata":{"trusted":true,"input_collapsed":false,"collapsed":false,"id":"D925DFDCDDF145118B8FF982E5B2B4F1"},"cell_type":"code","source":"val matchSummary = matches.describe()\nval delSummary = del.describe()\n","outputs":[{"name":"stdout","output_type":"stream","text":"matchSummary: org.apache.spark.sql.DataFrame = [summary: string, id_1: string ... 10 more fields]\ndelSummary: org.apache.spark.sql.DataFrame = [summary: string, id_1: string ... 10 more fields]\n"},{"metadata":{},"data":{"text/html":""},"output_type":"execute_result","execution_count":31,"time":"Took: 2 seconds 645 milliseconds, at 2018-1-19 1:32"}]},{"metadata":{"trusted":true,"input_collapsed":false,"collapsed":false,"id":"812DEA486EBC40B2B4539221CF8BD3F7"},"cell_type":"code","source":"def longForm(desc: DataFrame): DataFrame = {\n    import desc.sparkSession.implicits._ // For toDF RDD -> DataFrame conversion\n    val schema = desc.schema\n    desc.flatMap(row => {\n      val metric = row.getString(0)\n      (1 until row.size).map(i => (metric, schema(i).name, row.getString(i).toDouble))\n    })\n      .toDF(\"metric\", \"field\", \"value\")\n  }\n\ndef pivotSummary(desc: DataFrame): DataFrame = {\n    val lf = longForm(desc)\n    lf.groupBy(\"field\").\n      pivot(\"metric\", Seq(\"count\", \"mean\", \"stddev\", \"min\", \"max\")).\n      agg(first(\"value\"))\n  }","outputs":[{"name":"stdout","output_type":"stream","text":"longForm: (desc: org.apache.spark.sql.DataFrame)org.apache.spark.sql.DataFrame\npivotSummary: (desc: org.apache.spark.sql.DataFrame)org.apache.spark.sql.DataFrame\n"},{"metadata":{},"data":{"text/html":""},"output_type":"execute_result","execution_count":34,"time":"Took: 1 second 204 milliseconds, at 2018-1-19 1:33"}]},{"metadata":{"trusted":true,"input_collapsed":false,"collapsed":false,"id":"0F4F27991926477B986F352617157A89"},"cell_type":"code","source":"val matchSummaryT = pivotSummary(matchSummary)\nval delSummaryT = pivotSummary(delSummary)\n\nmatchSummaryT","outputs":[{"name":"stdout","output_type":"stream","text":"matchSummaryT: org.apache.spark.sql.DataFrame = [field: string, count: double ... 4 more fields]\ndelSummaryT: org.apache.spark.sql.DataFrame = [field: string, count: double ... 4 more fields]\nres95: org.apache.spark.sql.DataFrame = [field: string, count: double ... 4 more fields]\n"},{"metadata":{},"data":{"text/html":"<div class=\"df-canvas\">\n      <script data-this=\"{&quot;dataId&quot;:&quot;anona6288315f8b73347a6732bb6ad7e91f5&quot;,&quot;partitionIndexId&quot;:&quot;anon15356935349eda1918177ea18d95ca35&quot;,&quot;numPartitions&quot;:1,&quot;dfSchema&quot;:{&quot;type&quot;:&quot;struct&quot;,&quot;fields&quot;:[{&quot;name&quot;:&quot;field&quot;,&quot;type&quot;:&quot;string&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot;count&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot;mean&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot;stddev&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot;min&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot;max&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}}]}}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/req(['../javascripts/notebook/dataframe','../javascripts/notebook/consoleDir'], \n      function(dataframe, extension) {\n        dataframe.call(data, this, extension);\n      }\n    );/*]]>*/</script>\n      <link rel=\"stylesheet\" href=\"/assets/stylesheets/ipython/css/dataframe.css\" type=\"text/css\"/>\n    </div>"},"data_list":{"application/svg+pngbase64":[]},"output_type":"execute_result","execution_count":36,"time":"Took: 4 seconds 929 milliseconds, at 2018-1-19 1:34"}]},{"metadata":{"trusted":true,"input_collapsed":false,"collapsed":false,"id":"823FD9E2DD494F3AAF004AEBB1E161E6"},"cell_type":"code","source":"delSummaryT","outputs":[{"name":"stdout","output_type":"stream","text":"res97: org.apache.spark.sql.DataFrame = [field: string, count: double ... 4 more fields]\n"},{"metadata":{},"data":{"text/html":"<div class=\"df-canvas\">\n      <script data-this=\"{&quot;dataId&quot;:&quot;anon19343d314e2254c6f3ca4e10ce388909&quot;,&quot;partitionIndexId&quot;:&quot;anon49189d11616d22fbd109c1effc6d8921&quot;,&quot;numPartitions&quot;:1,&quot;dfSchema&quot;:{&quot;type&quot;:&quot;struct&quot;,&quot;fields&quot;:[{&quot;name&quot;:&quot;field&quot;,&quot;type&quot;:&quot;string&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot;count&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot;mean&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot;stddev&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot;min&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot;max&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}}]}}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/req(['../javascripts/notebook/dataframe','../javascripts/notebook/consoleDir'], \n      function(dataframe, extension) {\n        dataframe.call(data, this, extension);\n      }\n    );/*]]>*/</script>\n      <link rel=\"stylesheet\" href=\"/assets/stylesheets/ipython/css/dataframe.css\" type=\"text/css\"/>\n    </div>"},"data_list":{"application/svg+pngbase64":[]},"output_type":"execute_result","execution_count":37,"time":"Took: 2 seconds 554 milliseconds, at 2018-1-19 1:34"}]},{"metadata":{"trusted":true,"input_collapsed":false,"collapsed":false,"id":"072E2EBF66664213860898B722C0BB2C"},"cell_type":"code","source":"matchSummaryT.createOrReplaceTempView(\"match_desc\")\ndelSummaryT.createOrReplaceTempView(\"del_desc\")\nspark.sql(\"\"\"\n      SELECT a.field, a.count + b.count total, a.mean - b.mean delta\n      FROM match_desc a INNER JOIN del_desc b ON a.field = b.field\n      ORDER BY delta DESC, total DESC\n    \"\"\").show()","outputs":[{"name":"stdout","output_type":"stream","text":"+------------+--------+-------------------+\n|       field|   total|              delta|\n+------------+--------+-------------------+\n|        id_1|574914.0| 1532.4758025618794|\n|     cmp_plz|573639.0| 0.9568124441677914|\n|cmp_lname_c2|   257.0|  0.788875728404714|\n|      cmp_by|574824.0| 0.7771301216551673|\n|      cmp_bd|574824.0| 0.7757879250040416|\n|cmp_lname_c1|574914.0| 0.6829795637937397|\n|      cmp_bm|574824.0| 0.5105988571868638|\n|cmp_fname_c1|574802.0|  0.284498689450304|\n|cmp_fname_c2| 10414.0|0.08809501556461785|\n|     cmp_sex|574914.0|0.03128104769756701|\n|        id_2|574914.0|-15148.350499184206|\n+------------+--------+-------------------+\n\n"},{"metadata":{},"data":{"text/html":""},"output_type":"execute_result","execution_count":1,"time":"Took: 2 seconds 969 milliseconds, at 2018-1-19 1:48"}]},{"metadata":{"trusted":true,"input_collapsed":false,"collapsed":false,"id":"E621E1EE0EDA421C9A7E4FF370A60D2A"},"cell_type":"code","source":"val matchData = parsed.as[MatchData]","outputs":[{"name":"stdout","output_type":"stream","text":"matchData: org.apache.spark.sql.Dataset[MatchData] = [id_1: int, id_2: int ... 10 more fields]\n"},{"metadata":{},"data":{"text/html":""},"output_type":"execute_result","execution_count":2,"time":"Took: 1 second 193 milliseconds, at 2018-1-19 1:48"}]},{"metadata":{"trusted":true,"input_collapsed":false,"collapsed":false,"id":"D46831A409FF4FEC8F38F7FB40017E66"},"cell_type":"code","source":"def crossTabs(scored: DataFrame, t: Double): DataFrame = {\n    scored.\n      selectExpr(s\"score >= $t as above\", \"is_match\").\n      groupBy(\"above\").\n      pivot(\"is_match\", Seq(\"true\", \"false\")).\n      count()\n  }\n\n  case class Score(value: Double) {\n    def +(oi: Option[Int]) = {\n      Score(value + oi.getOrElse(0))\n    }\n  }\n\n  def scoreMatchData(md: MatchData): Double = {\n    (Score(md.cmp_lname_c1.getOrElse(0.0)) + md.cmp_plz +\n      md.cmp_by + md.cmp_bd + md.cmp_bm).value\n  }","outputs":[{"name":"stdout","output_type":"stream","text":"crossTabs: (scored: org.apache.spark.sql.DataFrame, t: Double)org.apache.spark.sql.DataFrame\ndefined class Score\nscoreMatchData: (md: MatchData)Double\n"},{"metadata":{},"data":{"text/html":""},"output_type":"execute_result","execution_count":3,"time":"Took: 747 milliseconds, at 2018-1-19 1:49"}]},{"metadata":{"trusted":true,"input_collapsed":false,"collapsed":false,"id":"9FF5411E4BFC4C6D9F856754E0DF4979"},"cell_type":"code","source":"val scored = matchData.map { md =>\n      (scoreMatchData(md), md.is_match)\n    }.toDF(\"score\", \"is_match\")\n    crossTabs(scored, 4.0).show()\nscored","outputs":[{"name":"stdout","output_type":"stream","text":"+-----+----+------+\n|above|true| false|\n+-----+----+------+\n| true|2087|    69|\n|false|   7|572751|\n+-----+----+------+\n\nscored: org.apache.spark.sql.DataFrame = [score: double, is_match: boolean]\nres105: org.apache.spark.sql.DataFrame = [score: double, is_match: boolean]\n"},{"metadata":{},"data":{"text/html":"<div class=\"df-canvas\">\n      <script data-this=\"{&quot;dataId&quot;:&quot;anonfdd471a95e3c7a259d5c05c1d5b9eefd&quot;,&quot;partitionIndexId&quot;:&quot;anon652ac15bcfda4d47eed993173efadc2d&quot;,&quot;numPartitions&quot;:22997,&quot;dfSchema&quot;:{&quot;type&quot;:&quot;struct&quot;,&quot;fields&quot;:[{&quot;name&quot;:&quot;score&quot;,&quot;type&quot;:&quot;double&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}},{&quot;name&quot;:&quot;is_match&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;nullable&quot;:true,&quot;metadata&quot;:{}}]}}\" type=\"text/x-scoped-javascript\">/*<![CDATA[*/req(['../javascripts/notebook/dataframe','../javascripts/notebook/consoleDir'], \n      function(dataframe, extension) {\n        dataframe.call(data, this, extension);\n      }\n    );/*]]>*/</script>\n      <link rel=\"stylesheet\" href=\"/assets/stylesheets/ipython/css/dataframe.css\" type=\"text/css\"/>\n    </div>"},"output_type":"execute_result","execution_count":5,"time":"Took: 3 seconds 629 milliseconds, at 2018-1-19 1:50"}]},{"metadata":{"trusted":true,"input_collapsed":false,"collapsed":true,"id":"7890A0FA81F8414680C1BBFF961D6F84"},"cell_type":"code","source":"","outputs":[]}],"nbformat":4}